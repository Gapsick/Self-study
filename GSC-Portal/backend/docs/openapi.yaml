openapi: 3.0.0
info:
  title: GSC Portal API
  version: 1.0.0
tags:
  - name: Auth
  - name: Dashboard
  - name: Notices
  - name: Dispatch
  - name: Cleaning
  - name: Timetable
    description: 휴‧보강 이벤트 관리 API

paths:
  /admin/users:
    get:
      summary: 관리자 사용자 승인
      tags:
        - Admin
      responses:
        "200":
          description: 승인대기 계정 출력
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    role_type:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    is_international:
                      type: boolean
                    level_name:
                      type: string
              example:
                - id: 1
                  role_type: student
                  name: 김성식
                  email: abc@gmail.com
                  phone: 010-4628-5981
                  is_international: true
                  language_id: JLPT3
                - id: 2
                  role_type: professor
                  name: 김교수
                  email: abcd@gmail.com
                  phone: 010-1234-5678
                  professor_id: P001
    post:
      summary: 사용자 승인/거절 처리
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "2423001"
                action:
                  type: string
                  enum: [active, inactive]
                  example: active
      responses:
        "200":
          description: 승인 완료
  /admin/users/{id}:
    delete:
      summary: 사용자 삭제
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 삭제 완료
  /admin/email:
    get:
      summary: 예외 이메일 관리
      tags:
        - Admin
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    reason:
                      type: string
              example:
                - id: 1
                  email: aaa@gmail.com
                  reason: 김순애 교수님 계정
    post:
      summary: 예외 이메일 등록
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ccc@gmail.com
                reason:
                  type: string
                  example: 교수 연구용
      responses:
        "200":
          description: 등록 완료
  /admin/email/{id}:
    delete:
      summary: 예외 이메일 삭제
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 삭제 완료
  /admin/students:
    get:
      summary: 학생 정보 관리
      tags:
        - Admin
      parameters:
        - in: query
          name: grade_id
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
          description: 학년 (1=1학년, 2=2학년, 3=3학년)
        - in: query
          name: status
          schema:
            type: string
            enum:
              - 재학
              - 휴학
              - 자퇴
              - 졸업
          description: 학생 상태
      responses:
        "200":
          description: 조건에 맞는 학생 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    grade_id:
                      type: integer
                    user_id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    status:
                      type: string
                    language_id:
                      type: string
                    level_class:
                      type: string
              example:
                - id: 1
                  grade_id: 1
                  user_id: 2423001
                  name: 권혁일
                  email: aaa@gmail.com
                  phone: 010-1111-1111
                  status: 재학
                  language_id: JLPTN1
                  level_class: A
                - id: 2
                  grade_id: 2
                  user_id: 2423002
                  name: 김성식
                  email: bbb@gmail.com
                  phone: 010-2222-2222
                  status: 휴학
                  language_id: JLPTN2
                  level_class: B
  /admin/students/{user_id}:
    patch:
      summary: 학생 정보 수정
      tags:
        - Admin
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                status:
                  type: string
                  enum: [재학, 휴학, 자퇴, 졸업]
                grade_id:
                  type: integer
                  enum: [1, 2, 3]
                language_id:
                  type: string
                level_name:
                  type: string
                class_name:
                  type: string
      responses:
        "200":
          description: 수정 완료
  /admin/students/{id}:
    delete:
      summary: 학생 삭제
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 삭제 완료
  /dashboard:
    get:
      tags:
        - Dashboard
      summary: 메인 대시보드 데이터 조회
      description: |
        - 로그인한 사용자의 메인 화면에 필요한 모든 데이터를 조회합니다.
        - 사용자의 역할(학생, 교수, 관리자)에 따라 반환되는 데이터가 달라집니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 대시보드 데이터 반환 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
  /auth/google:
    get:
      tags:
        - Auth
      summary: Google OAuth 인증 URL 요청
      description: 사용자가 로그인 버튼 클릭 시, Google OAuth 인증을 위한 URL을 반환합니다.
      responses:
        '200':
          description: 인증 URL 반환 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: https://accounts.google.com/o/oauth2/v2/auth?...client_id=...
  /auth/google/callback:
    get:
      tags:
        - Auth
      summary: Google OAuth 인증 완료 후 콜백 처리
      description: Google 인증 성공 후 전달받은 code를 기반으로 토큰 요청 및 사용자 정보를 처리합니다.
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Google에서 전달하는 인증 코드
      responses:
        '200':
          description: 로그인 성공 (토큰과 사용자 정보 반환)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '403':
          description: 로그인 실패 (승인 대기 또는 거부된 사용자)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Access Token 재발급
      description: 저장된 refresh token을 이용해 access token(jwt)를 재발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: 1//0gNabcABCDeFgHIJKLmnopQR_StUvWxYz
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 유효하지 않은 refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/me:
    get:
      tags:
        - Auth
      summary: 현재 로그인된 사용자 정보
      description: JWT를 통해 로그인된 사용자의 정보를 반환합니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 사용자 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/register:
    post:
      tags:
        - Auth
      summary: 최초 로그인 사용자 정보 등록 (회원가입)
      description: |
        - 구글 OAuth로 최초 로그인한 사용자가 학번, 연락처, 반 등 추가 정보를 제출하여 가입을 완료합니다.
        - 요청 성공 시 해당 사용자의 status는 'pending'(승인 대기)으로 변경됩니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: 등록 성공. 생성된 사용자 정보 반환.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: '잘못된 요청 (예: 필수 필드 누락, 유효하지 않은 class_id)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 이미 등록된 사용자 (Conflict)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notices:
    get:
      tags:
        - Notices
      summary: 공지사항 목록 조회
      description: |
        - 학생: 자신에게 타겟된 공지 및 전체 공지
        - 교수/관리자: 모든 공지
      security:
        - bearerAuth: []
      parameters:
        - name: grade_id
          in: query
          required: false
          schema:
            type: string
            example: G1
          description: '학년 필터 (예: G1, G2, G3) 비워두면 전체 조회'
        - name: level_id
          in: query
          required: false
          schema:
            type: string
            example: N1
          description: '레벨 필터 (예: N1, N2 대비반 등 특강용)'
        - name: language_id
          in: query
          required: false
          schema:
            type: string
            example: JP
          description: '언어 필터 (예: 일본어반, 한국어반 등)'
        - name: course_id
          in: query
          required: false
          schema:
            type: string
            example: COURSE-G1-01
          description: 과목 필터 (특정 과목의 공지만 보려할 때 사용)
        - name: sec_id
          in: query
          required: false
          schema:
            type: string
          description: '학기 필터 (예: 2025-1). 지정하지 않으면 현재 학기만 조회.'
      responses:
        '200':
          description: 공지사항 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticeSummary'
    post:
      tags:
        - Notices
      summary: 공지사항 생성 (관리자/교수용)
      description: 새로운 공지사항을 생성합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoticeCreateRequest'
      responses:
        '201':
          description: 공지사항 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeDetail'
  /notices/{noticeId}:
    get:
      tags:
        - Notices
      summary: 공지사항 상세 조회
      description: 특정 공지사항의 상세 내용을 조회합니다. 학생이 이 API를 호출하면 자동으로 '읽음' 처리됩니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 공지사항 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeDetail'
    put:
      tags:
        - Notices
      summary: 공지사항 수정 (관리자/교수용)
      description: 특정 공지사항의 내용을 수정합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoticeUpdateRequest'
      responses:
        '200':
          description: 공지사항 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeDetail'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 대상 공지 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Notices
      summary: 공지사항 삭제 (관리자/교수용)
      description: 특정 공지사항을 삭제합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 공지사항 삭제 성공 (본문 없음)
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 대상 공지 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notices/{noticeId}/dispatch:
    post:
      tags:
        - Notices
      summary: 공지의 대상자에게 메시지 발송
      description: |
        - noticeId에 해당하는 공지 내용을 기반으로, 해당 공지에 설정된 타겟(학년/레벨 등)에게 알림을 발송합니다.
        - 대상자는 서버에서 자동으로 조회합니다.
        - 대량 발송은 비동기로 처리하고 job_id를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: (선택 사항) 특정 채널을 지정할 때 사용합니다. 비워두면 서버 기본값(카카오)으로 동작합니다.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  enum:
                    - KAKAO
                  default: KAKAO
            example: {}
      responses:
        '202':
          description: 큐에 적재됨(비동기)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KakaoEnqueueResponse'
        '400':
          description: 잘못된 템플릿 변수/수신자 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notices/{noticeId}/status:
    get:
      tags:
        - Notices
      summary: 공지사항 수신자 및 읽음 현황 조회 (관리자/교수용)
      description: 특정 공지사항을 수신한 모든 사용자와 각 사용자의 읽음 상태를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 수신자 목록 및 읽음 현황 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticeReadStatus'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notices/{noticeId}/read:
    patch:
      tags:
        - Notices
      summary: 공지 읽음 처리 (학생 본인)
      description: 현재 로그인한 사용자의 읽음 상태를 갱신합니다. 멱등적으로 동작합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 읽음 처리 완료 (본문 없음)
        '404':
          description: 대상 공지 또는 수신 행을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dispatch/direct:
    post:
      tags:
        - Dispatch
      summary: 특정 사용자들에게 직접 메시지 발송
      description: |
        - Request Body에 명시된 사용자 ID 목록을 대상으로 즉시 메시지를 발송합니다.
        - 공지사항과 연동되지 않습니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectMessageRequest'
      responses:
        '202':
          description: 발송 요청 접수됨(비동기)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KakaoEnqueueResponse'
        '400':
          description: '잘못된 요청 (예: 사용자 ID 목록이 비어있음)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dispatch/jobs/{jobId}:
    get:
      tags:
        - Dispatch
      summary: 발송 작업 상태 조회
      security:
        - bearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 상태 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  status:
                    type: string
                    enum:
                      - QUEUED
                      - SENDING
                      - PARTIAL
                      - SUCCESS
                      - FAILED
                  total:
                    type: integer
                  sent:
                    type: integer
                  failed:
                    type: integer
  /cleaning-rosters:
    get:
      tags:
        - Cleaning
      summary: 주간 청소 당번 조회
      description: 특정 학년 또는 특정 날짜를 기준으로 배정된 청소 당번 목록을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: section
          in: query
          required: false
          schema:
            type: string
            example: 2025-2
          description: '조회할 학기 (예: 2025년 2학기)'
        - name: grade_id
          in: query
          required: true
          schema:
            type: string
            example: G1
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
          description: '조회하고 싶은 주(week)의 아무 날짜나 입력 (예: 2025-09-15)'
      responses:
        '200':
          description: 청소 당번 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleaningRosterResponse'
  /classrooms/polls:
    get:
      summary: 이번 주 강의실 개방 투표 현황 조회
      tags:
        - Classroom - Poll
      parameters:
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          description: "주 시작일 (예: 2025-09-15)"
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
          description: "주 종료일 (예: 2025-09-21)"
      responses:
        "200":
          description: 투표 현황 목록
    post:
      summary: 강의실 개방 투표 생성
      tags:
        - Classroom - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grade_id:
                  type: integer
                  example: 1
                classroom_id:
                  type: string
                  example: "101"
                poll_date:
                  type: string
                  example: 2025-09-20
                target_weekend:
                  type: string
                  example: 토요일
                required_count:
                  type: integer
                  example: 8
      responses:
        "200":
          description: 투표 생성 완료
  /classrooms/polls/{poll_id}:
    get:
      summary: 특정 투표 상세 조회
      tags:
        - Classroom - Poll
      parameters:
        - in: path
          name: poll_id
          required: true
          schema:
            type: string
          description: 투표 ID
        - in: query
          name: user_id
          required: true
          schema:
            type: string
          description: 조회하는 사용자 ID (투표 여부 확인용)
      responses:
        "200":
          description: 투표 상세 정보
  /classrooms/polls/{poll_id}/vote:
    post:
      summary: 투표 참여하기
      tags:
        - Classroom - Poll
      parameters:
        - in: path
          name: poll_id
          required: true
          schema:
            type: string
          description: 투표 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: U001
      responses:
        "200":
          description: 투표 완료
  /classrooms/{classroom_id}/reservations:
    get:
      summary: 강의실 이번 주 예약 현황 조회
      tags:
        - Classroom - Reservation
      parameters:
        - in: path
          name: classroom_id
          required: true
          schema:
            type: string
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: 예약 현황 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reservation_id:
                      type: string
                      example: R001
                    name:
                      type: string
                      example: 김성식
                    title:
                      type: string
                      example: 스터디 모임
                    start_at:
                      type: string
                      example: 2025-09-17 10:00:00
                    end_at:
                      type: string
                      example: 2025-09-17 12:00:00
                    status:
                      type: string
                      example: ACTIVE
    post:
      summary: 강의실
      tags:
        - Classroom - Reservation
      parameters:
        - in: path
          name: classroom_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: U001
                title:
                  type: string
                  example: 스터디 모임
                start_at:
                  type: string
                  example: 2025-09-17 10:00:00
                end_at:
                  type: string
                  example: 2025-09-17 12:00:00
      responses:
        "200":
          description: 예약 완료
  /classrooms/reservations/{reservation_id}:
    delete:
      summary: 예약 취소
      tags:
        - Classroom - Reservation
      parameters:
        - in: path
          name: reservation_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 예약 취소 완료
  /classrooms:
    get:
      summary: 강의실 목록 조회
      tags:
        - Classroom
      responses:
        "200":
          description: 강의실 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    classroom_id:
                      type: string
                      example: "101"
                    building:
                      type: string
                      example: 본관
                    room_number:
                      type: string
                      example: "101"
                    room_type:
                      type: string
                      example: 강의실
    post:
      summary: 강의실 등록
      tags:
        - Classroom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                building:
                  type: string
                  example: 본관
                room_number:
                  type: string
                  example: "404"
                room_type:
                  type: string
                  example: 수업
      responses:
        "200":
          description: 등록 완료
  /classrooms/{id}:
    put:
      summary: 강의실 수정
      tags:
        - Classroom
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                building:
                  type: string
                  example: 신관
                room_number:
                  type: string
                  example: "302"
                room_type:
                  type: string
                  example: 회의
      responses:
        "200":
          description: 수정 완료
    delete:
      summary: 강의실 삭제
      tags:
        - Classroom
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 삭제 완료
  /classrooms/purposes:
    get:
      summary: 강의실 사용 목적 목록 조회
      tags:
        - Classroom
      responses:
        "200":
          description: 목적 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    purpose:
                      type: string
                      example: 수업
  /modal/sections:
    get:
      summary: 학기 목록 조회
      tags:
        - Modal - Common
      responses:
        "200":
          description: 학기 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sec_id:
                      type: string
                      example: 2025-1
                    label:
                      type: string
                      example: 2025-1
  /modal/professors:
    get:
      summary: 교수 목록 조회
      tags:
        - Modal - Common
      responses:
        "200":
          description: 교수 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      example: P001
                    name:
                      type: string
                      example: 이교수
  /modal/classrooms:
    get:
      summary: 강의실 목록 조회
      tags:
        - Modal - Common
      responses:
        "200":
          description: 강의실 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    classroom_id:
                      type: string
                      example: "101"
                    building:
                      type: string
                      example: 본관
                    room_number:
                      type: string
                      example: "101"
  /modal/timeslots:
    get:
      summary: 교시 목록 조회
      tags:
        - Modal - Common
      responses:
        "200":
          description: 교시 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    time_slot_id:
                      type: string
                      example: "1"
                    start_time:
                      type: string
                      example: 09:00:00
                    end_time:
                      type: string
                      example: 09:50:00
  /modal/days:
    get:
      summary: 요일 목록 조회
      tags:
        - Modal - Common
      responses:
        "200":
          description: 요일 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    day_of_week:
                      type: string
                      example: 월
  /modal/levels/korean:
    get:
      summary: 한국어 레벨 목록 조회 (TOPIK 계열)
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 한국어 레벨 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    level_id:
                      type: string
                      example: "5"
                    name:
                      type: string
                      example: TOPIK 6급
  /modal/levels:
    get:
      summary: 레벨 목록 조회
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 레벨 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    level_id:
                      type: string
                      example: "1"
                    name:
                      type: string
                      example: JLPT N1
  /modal/classes/{level_id}:
    get:
      summary: 선택한 레벨의 반 목록 조회
      tags:
        - Modal - Subjects
      parameters:
        - in: path
          name: level_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 반 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class_id:
                      type: string
                      example: "1"
                    name:
                      type: string
                      example: A
  /modal/courses/regular:
    get:
      summary: 정규 과목 목록 조회
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 정규 과목 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    course_id:
                      type: string
                      example: C001
                    title:
                      type: string
                      example: 인공지능 개론
                    grade_id:
                      type: string
                      example: "2"
  /modal/courses/special:
    get:
      summary: 특강 과목 목록 조회
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 특강 과목 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    course_id:
                      type: string
                      example: SP001
                    title:
                      type: string
                      example: JLPT 특강
                    level_id:
                      type: string
                      example: "1"
                    level_name:
                      type: string
                      example: JLPT N1
                    class_id:
                      type: string
                      example: "1"
                    class_name:
                      type: string
                      example: A
  /modal/courses/korean:
    get:
      summary: 한국어 과목 목록 조회
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 한국어 과목 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    course_id:
                      type: string
                      example: K001
                    title:
                      type: string
                      example: TOPIK 대비 한국어
                    level_id:
                      type: string
                      example: "5"
                    level_name:
                      type: string
                      example: TOPIK 6급
  /modal/courses/all:
    get:
      summary: 전체 과목 목록 조회 (정규 + 특강 + 한국어)
      tags:
        - Modal - Subjects
      responses:
        "200":
          description: 전체 과목 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    course_id:
                      type: string
                      example: C001
                    title:
                      type: string
                      example: 인공지능 개론
                    type:
                      type: string
                      example: 정규/특강/한국어
  /modal/schedule/{course_id}:
    get:
      summary: 특정 과목의 시간표 조회
      tags:
        - Modal - Timetable
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 특정 과목 시간표
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schedule_id:
                      type: string
                      example: SCH1
                    course_id:
                      type: string
                      example: C001
                    title:
                      type: string
                      example: 인공지능 개론
                    day_of_week:
                      type: string
                      example: 월
                    start_time:
                      type: string
                      example: 09:00:00
                    end_time:
                      type: string
                      example: 09:50:00
                    building:
                      type: string
                      example: 본관
                    room_number:
                      type: string
                      example: "101"
  /timetables/events:
    post:
      summary: 휴‧보강 등록
      tags:
        - Timetable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: string
                  example: C001
                event_type:
                  type: string
                  enum:
                    - 휴강
                    - 보강
                  example: 휴강
                event_date:
                  type: string
                  format: date
                  example: 2025-09-20
                time_slot_id:
                  type: string
                  example: "2"
      responses:
        "200":
          description: 이벤트 등록 완료
  /timetables/events/{id}:
    delete:
      summary: 휴‧보강 취소
      tags:
        - Timetable
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 이벤트 삭제 완료
  /timetables/{type}:
    post:
      summary: 시간표 등록 (정규 / 특강 / 한국어)
      tags:
        - Timetable
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - regular
              - special
              - korean
          description: 시간표 유형 (정규/특강/한국어)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: string
                  example: C001
                grade_id:
                  type: integer
                  example: 2
                classroom_id:
                  type: string
                  example: "101"
                day_of_week:
                  type: string
                  example: 월
                time_slot_id:
                  type: string
                  example: "1"
              additionalProperties: true
      responses:
        "200":
          description: 등록 완료
    put:
      summary: 시간표 수정
      tags:
        - Timetable
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - regular
              - special
              - korean
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                classroom_id:
                  type: string
                  example: "102"
                day_of_week:
                  type: string
                  example: 화
                time_slot_id:
                  type: string
                  example: "2"
              additionalProperties: true
      responses:
        "200":
          description: 수정 완료
    delete:
      summary: 시간표 삭제
      tags:
        - Timetable
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - regular
              - special
              - korean
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 삭제 완료
  /timetables/student/{user_id}:
    get:
      summary: 학생 시간표 조회 (주간)
      description: |
        특정 학생의 주간 시간표를 조회합니다.  
        - 정규 수업 → 학생 학년 기준  
        - 특강 → 학생 레벨 + 언어 기준  
        - 한국어 → 유학생만 허용  
        - 주간 범위는 `week_start`, `week_end` 쿼리 파라미터로 지정
      tags:
        - Timetable
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 학생 사용자 ID
        - in: query
          name: week_start
          required: true
          schema:
            type: string
            format: date
          description: "주 시작일 (예: 2025-09-15)"
        - in: query
          name: week_end
          required: true
          schema:
            type: string
            format: date
          description: "주 종료일 (예: 2025-09-21)"
      responses:
        "200":
          description: 주간 시간표 데이터
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Timetable"
  /timetables/professor/{user_id}:
    get:
      summary: 교수 시간표 조회 (주간)
      description: |
        특정 교수의 주간 시간표를 조회합니다.  
        - 본인이 담당하는 과목만 표시  
        - 주간 범위는 `week_start`, `week_end` 쿼리 파라미터로 지정
      tags:
        - Timetable
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 교수 사용자 ID
        - in: query
          name: week_start
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: week_end
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: 주간 시간표 데이터
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Timetable"
  /timetables/admin:
    get:
      summary: 전체 시간표 조회 (주간)
      description: |
        관리자가 전체 시간표를 주간 단위로 조회합니다.  
        - 모든 학년, 특강, 한국어 포함  
        - 주간 범위는 `week_start`, `week_end` 쿼리 파라미터로 지정
      tags:
        - Timetable
      parameters:
        - in: query
          name: week_start
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: week_end
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: 주간 시간표 데이터
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Timetable"

components:
  schemas:
    Timetable:
      type: object
      properties:
        course_id:
          type: string
          example: C001
        course_title:
          type: string
          example: 인공지능 개론
        year:
          type: integer
          example: 2025
        semester:
          type: integer
          example: 1
        day_of_week:
          type: string
          example: 월
        start_time:
          type: string
          format: time
          example: 09:00:00
        end_time:
          type: string
          format: time
          example: 09:50:00
        building:
          type: string
          example: 본관
        room_number:
          type: string
          example: "101"
        professor_name:
          type: string
          example: 이교수
        grade_name:
          type: string
          example: 2학년
        level_name:
          type: string
          example: JLPT N2
        language_name:
          type: string
          example: 한국어
        class_group:
          type: string
          example: A
        is_special:
          type: boolean
          example: false
        event_status:
          type: string
          enum:
            - 휴강
            - 보강
          example: 휴강
        event_date:
          type: string
          format: date
          example: 2025-04-15
    securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
    User:
      type: object
      properties:
        user_id:
          type: integer
          description: 사용자 고유 ID
          example: 1
        name:
          type: string
          example: 홍길동
        email:
          type: string
          example: test@yju.ac.kr
        role_type:
          type: string
          enum:
            - student
            - professor
            - admin
        status:
          type: string
          enum:
            - active
            - inactive
            - pending
        is_international:
          type: string
          enum:
            - 한국인
            - 외국인
          description: 학생인 경우, 유학생 여부
          example: 한국인
    NoticeSummary:
      type: object
      properties:
        notice_id:
          type: integer
          example: 124
        title:
          type: string
          example: '[G1] 2차 과제 안내'
        created_at:
          type: string
          format: date-time
          example: '2025-09-15T10:30:00Z'
        course_id:
          type: string
          example: COURSE-G1-01
        course_title:
          type: string
          example: 기초 일본어
        author_id:
          type: string
          example: U12345
        author_name:
          type: string
          example: 홍길동
        author_role:
          type: string
          example: PROFESSOR
        professor_name:
          type: string
          example: 김교수
        targets:
          type: array
          items:
            type: object
            properties:
              grade_id:
                type: string
                example: G1
              level_id:
                type: string
                example: N1
              language_id:
                type: string
                example: JP
        content:
          type: string
          example: 과제 마감일은 다음주 월요일입니다.
        attachments:
          type: array
          items:
            type: object
            properties:
              file_name:
                type: string
                example: 과제안내.pdf
              file_url:
                type: string
                example: https://example.com/file/과제안내.pdf
    NoticeDetail:
      allOf:
        - $ref: '#/components/schemas/NoticeSummary'
        - type: object
          properties:
            content:
              type: string
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    NoticeCreateRequest:
      type: object
      required:
        - title
        - content
        - course_id
      properties:
        title:
          type: string
        content:
          type: string
        course_id:
          type: string
          example: COURSE-G1-01
          nullable: true
        target_grade_id:
          type: string
          example: G1
        target_level_id:
          type: string
          example: N1
          nullable: true
        target_language_id:
          type: string
          example: JP
          nullable: true
        file_ids:
          type: array
          items:
            type: string
            example: F000000001
    NoticeReadStatus:
      type: object
      properties:
        user_id:
          type: integer
        student_name:
          type: string
        status:
          type: string
          enum:
            - SENT
            - FAILED
        read_at:
          type: string
          format: date-time
          nullable: true
    KakaoSendRequest:
      type: object
      description: 카카오 알림톡 발송을 위한 정보를 담는 객체
      required:
        - template_code
        - sender_key
      properties:
        template_code:
          type: string
          description: 카카오 채널에 사전 승인된 템플릿의 고유 코드
          example: NOTICE_ASSIGNMENT_V2
        sender_key:
          type: string
          description: 알림톡 발송 시 필요한 발신 프로필 키
          example: KA01-12345ABCDE
        default_vars:
          type: object
          description: '모든 수신자에게 공통으로 적용될 템플릿 변수들 (예: #{title})'
          example:
            notice_title: 2주차 과제 안내
            content_preview: 첨부파일을 확인하여 과제를 제출하세요.
            link_url: https://portal.gsc/notices/124
        per_recipient:
          type: array
          description: 특정 수신자에게만 다른 내용의 변수를 보내고 싶을 때 사용합니다.
          items:
            type: object
            properties:
              user_id:
                type: integer
                description: 값을 덮어쓸 사용자의 ID
              vars:
                type: object
                description: 해당 사용자에게만 적용될 변수들
        options:
          type: object
          description: 발송 시 사용할 추가 옵션
          properties:
            allow_fallback_sms:
              type: boolean
              default: false
              description: 알림톡 실패 시 SMS로 대체 발송할지 여부
            schedule_at:
              type: string
              format: date-time
              nullable: true
              description: 예약 발송 시각 (YYYY-MM-DD HH:MM:SS 형식)
      example:
        template_code: NOTICE_ASSIGNMENT_V2
        sender_key: KA01-12345ABCDE
        default_vars:
          notice_title: 2주차 과제 안내
          content_preview: 첨부파일을 확인하여 과제를 제출하세요. 기한은 다음 주 월요일까지입니다.
          counselor_name: Alice 교수
          link_url: https://portal.gsc/notices/124
    KakaoEnqueueResponse:
      type: object
      properties:
        job_id:
          type: string
          example: KJOB_20250914_001
        accepted:
          type: integer
        rejected:
          type: integer
        reason:
          type: string
    ScheduleEntry:
      type: object
      properties:
        class_date:
          type: string
          format: date
        day_of_week:
          type: string
          enum:
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - SUN
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        classroom_name:
          type: string
        course_title:
          type: string
        is_special:
          type: boolean
        source:
          type: string
          enum:
            - PLANNED
            - MAKEUP
          description: 정규 수업인지 보강 수업인지 여부
    Reservation:
      type: object
      properties:
        reservation_id:
          type: integer
        reserved_by:
          type: string
        classroom_id:
          type: string
        building:
          type: string
        room_number:
          type: string
        reservation_title:
          type: string
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - CANCELLED
            - FINISHED
    ReservationRequest:
      type: object
      properties:
        classroom_id:
          type: string
        title:
          type: string
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
    WeekendPollStatus:
      type: object
      properties:
        poll_id:
          type: string
          example: POLL_CM405_20250920
        poll_date:
          type: string
          format: date
          example: '2025-09-20'
        classroom_name:
          type: string
          example: 청문관-405
        required_count:
          type: integer
          example: 5
        is_opened:
          type: boolean
          example: false
        yes_votes:
          type: integer
          example: 3
      example:
        poll_id: POLL_CM405_20250920
        poll_date: '2025-09-20'
        classroom_name: 청문관-405
        required_count: 5
        is_opened: false
        yes_votes: 3
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          $ref: '#/components/schemas/User'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Error message details.
    DashboardSchedule:
      type: object
      properties:
        course_title:
          type: string
          example: 기초 공학
        classroom_name:
          type: string
          example: 청문관-405
        start_time:
          type: string
          format: time
          example: '10:00:00'
        end_time:
          type: string
          format: time
          example: '11:50:00'
    DashboardCleaning:
      type: object
      properties:
        grade_id:
          type: string
          example: G1
        classroom_name:
          type: string
          example: 청문관-405
        members:
          type: array
          items:
            type: string
          example:
            - G1 Student 01
            - G1 Student 02
    DashboardResponse:
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/DashboardSchedule'
        notices:
          type: array
          items:
            $ref: '#/components/schemas/NoticeSummary'
        cleaning_duty:
          type: array
          items:
            $ref: '#/components/schemas/DashboardCleaning'
        weekend_poll:
          $ref: '#/components/schemas/WeekendPollStatus'
          nullable: true
      example:
        schedule:
          - course_title: 기초 공학
            classroom_name: 청문관-405
            start_time: '10:00:00'
            end_time: '11:50:00'
        notices:
          - notice_id: 124
            title: '[G1] 2차 과제 안내'
            created_at: '2025-09-15T10:30:00Z'
        cleaning_duty:
          - grade_id: G1
            classroom_name: 청문관-405
            members:
              - 학생1
              - 학생2
        weekend_poll:
          poll_id: POLL_CM405_20250920
          poll_date: '2025-09-20'
          classroom_name: 청문관-405
          required_count: 5
          is_opened: false
          yes_votes: 3
    UserRegistrationRequest:
      type: object
      description: 최초 로그인 사용자가 가입을 위해 제출하는 추가 정보
      required:
        - name
        - student_id
        - phone
        - email
        - grade_id
        - class_id
        - language_id
      properties:
        name:
          type: string
          description: 사용자 본명
          example: 김민준
        student_id:
          type: string
          description: '학번 (예: 2423001)'
          example: '2423001'
        phone:
          type: string
          description: 연락 가능한 전화번호
          example: 010-1234-5678
        email:
          type: string
          description: 이메일 주소
          example: minjun.kim@g.yju.ac.kr
        grade_id:
          type: string
          description: 소속 학년(Grade) ID
          example: G2
        class_id:
          type: string
          description: 소속 반(Class) ID
          example: N2-A
        language_id:
          type: string
          description: 언어 ID
          example: JP
        is_international:
          type: boolean
          description: 유학생 여부
          example: 한국인
    StudentApproval:
      type: object
      description: 학생 승인 대기 목록에 표시될 정보 (v_student_approval 뷰 기반)
      properties:
        user_id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        grade_name:
          type: string
        class_name:
          type: string
        level_name:
          type: string
        language_name:
          type: string
        is_international:
          type: string
          example: 한국인
        status:
          type: string
          example: pending
    ProfessorApproval:
      type: object
      description: 교수 승인 대기 목록에 표시될 정보 (v_professor_approval 뷰 기반)
      properties:
        user_id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        status:
          type: string
          example: pending
    UpdateUserStatusRequest:
      type: object
      description: 사용자 상태를 변경할 때 보내는 요청 본문
      properties:
        status:
          type: string
          enum:
            - active
            - inactive
          description: 승인 시 'active', 거절 시 'inactive'로 변경
          example: active
    GenerateRosterRequest:
      type: object
      properties:
        grade_id:
          type: string
          example: G1
        section_start_date:
          type: string
          format: date
          example: '2025-09-01'
        section_end_date:
          type: string
          format: date
          example: '2025-12-20'
        team_size:
          type: integer
          example: 5
        classroom_id:
          type: string
          example: CM405
    Attachment:
      type: object
      properties:
        file_name:
          type: string
        file_url:
          type: string
          format: uri
    NoticeUpdateRequest:
      type: object
      description: 공지사항 수정을 위한 요청 본문 (보낸 필드만 변경)
      properties:
        title:
          type: string
          description: 공지 제목
        content:
          type: string
          description: 공지 본문
        course_id:
          type: string
          nullable: true
        target_grade_id:
          type: string
          nullable: true
        target_level_id:
          type: string
          nullable: true
        target_language_id:
          type: string
          nullable: true
        file_ids:
          type: array
          description: 첨부 파일 **전체 교체 리스트**
          items:
            type: string
        file_ids_add:
          type: array
          description: 기존 첨부 유지 + 이 ID들을 **추가**
          items:
            type: string
        file_ids_remove:
          type: array
          description: 기존 첨부 유지 + 이 ID들을 **제거**
          items:
            type: string
    DirectMessageRequest:
      type: object
      required:
        - target_user_ids
        - message
      properties:
        target_user_ids:
          type: array
          description: 메시지를 수신할 사용자 ID 목록
          items:
            type: integer
          example:
            - 2423005
            - 2423012
            - 2523023
        message:
          description: 발송할 메시지 내용
          $ref: '#/components/schemas/KakaoSendRequest'
    CleaningRoster:
      type: object
      properties:
        work_date:
          type: string
          format: date
          description: 해당 주가 시작하는 월요일 날짜
        classroom_name:
          type: string
          example: 청문관-405
        members:
          type: array
          items:
            type: string
          example:
            - 아카자
            - 하쿠지
            - 기유
            - 코유키
            - 탄지로
    GradeCleaningRoster:
      type: object
      properties:
        grade_id:
          type: string
          example: G1
        classroom_name:
          type: string
          example: 청문관-405
        weekly_duties:
          type: array
          items:
            $ref: '#/components/schemas/CleaningRoster'
    CleaningRosterResponse:
      type: object
      description: 학년별로 그룹화된 학기 전체 청소 당번표
      properties:
        section:
          type: string
          example: 2025-2
        rosters:
          type: array
          items:
            $ref: '#/components/schemas/GradeCleaningRoster'
      example:
        section: 2025-2
        rosters:
          - grade_id: G1
            classroom_name: 창조관-304
            weekly_duties:
              - work_date: '2025-09-15'
                members:
                  - G1 Student 01
                  - G1 Student 02
              - work_date: '2025-09-22'
                members:
                  - G1 Student 03
                  - G1 Student 04
          - grade_id: G2
            classroom_name: 창조관-405
            weekly_duties:
              - work_date: '2025-09-15'
                members:
                  - G2 Student 01
                  - G2 Student 02

